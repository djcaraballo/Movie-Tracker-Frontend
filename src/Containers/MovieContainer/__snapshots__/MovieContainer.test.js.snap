// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MovieContainer should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(MovieContainer)
    store={
      Object {
        "dispatch": [MockFunction],
        "getState": [MockFunction] {
          "calls": Array [
            Array [],
            Array [],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": Object {
                "movies": Array [
                  Object {
                    "backdrop_path": "/somethingelse.jpg",
                    "id": 9,
                    "overview": "This is a movie.",
                    "poster_path": "/something.jpg",
                    "release_date": "2018",
                    "title": "Venom",
                    "vote_average": 6.6,
                  },
                ],
              },
            },
            Object {
              "isThrow": false,
              "value": Object {
                "movies": Array [
                  Object {
                    "backdrop_path": "/somethingelse.jpg",
                    "id": 9,
                    "overview": "This is a movie.",
                    "poster_path": "/something.jpg",
                    "release_date": "2018",
                    "title": "Venom",
                    "vote_average": 6.6,
                  },
                ],
              },
            },
          ],
        },
        "subscribe": [MockFunction] {
          "calls": Array [
            Array [
              [Function],
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "dispatch": [MockFunction],
      "movies": Array [
        Object {
          "backdrop_path": "/somethingelse.jpg",
          "id": 9,
          "overview": "This is a movie.",
          "poster_path": "/something.jpg",
          "release_date": "2018",
          "title": "Venom",
          "vote_average": 6.6,
        },
      ],
      "store": Object {
        "dispatch": [MockFunction],
        "getState": [MockFunction] {
          "calls": Array [
            Array [],
            Array [],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": Object {
                "movies": Array [
                  Object {
                    "backdrop_path": "/somethingelse.jpg",
                    "id": 9,
                    "overview": "This is a movie.",
                    "poster_path": "/something.jpg",
                    "release_date": "2018",
                    "title": "Venom",
                    "vote_average": 6.6,
                  },
                ],
              },
            },
            Object {
              "isThrow": false,
              "value": Object {
                "movies": Array [
                  Object {
                    "backdrop_path": "/somethingelse.jpg",
                    "id": 9,
                    "overview": "This is a movie.",
                    "poster_path": "/something.jpg",
                    "release_date": "2018",
                    "title": "Venom",
                    "vote_average": 6.6,
                  },
                ],
              },
            },
          ],
        },
        "subscribe": [MockFunction] {
          "calls": Array [
            Array [
              [Function],
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      },
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [MockFunction],
          "getState": [MockFunction] {
            "calls": Array [
              Array [],
              Array [],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": Object {
                  "movies": Array [
                    Object {
                      "backdrop_path": "/somethingelse.jpg",
                      "id": 9,
                      "overview": "This is a movie.",
                      "poster_path": "/something.jpg",
                      "release_date": "2018",
                      "title": "Venom",
                      "vote_average": 6.6,
                    },
                  ],
                },
              },
              Object {
                "isThrow": false,
                "value": Object {
                  "movies": Array [
                    Object {
                      "backdrop_path": "/somethingelse.jpg",
                      "id": 9,
                      "overview": "This is a movie.",
                      "poster_path": "/something.jpg",
                      "release_date": "2018",
                      "title": "Venom",
                      "vote_average": 6.6,
                    },
                  ],
                },
              },
            ],
          },
          "subscribe": [MockFunction] {
            "calls": Array [
              Array [
                [Function],
              ],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": undefined,
              },
            ],
          },
        },
        "unsubscribe": undefined,
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "dispatch": [MockFunction],
        "movies": Array [
          Object {
            "backdrop_path": "/somethingelse.jpg",
            "id": 9,
            "overview": "This is a movie.",
            "poster_path": "/something.jpg",
            "release_date": "2018",
            "title": "Venom",
            "vote_average": 6.6,
          },
        ],
        "store": Object {
          "dispatch": [MockFunction],
          "getState": [MockFunction] {
            "calls": Array [
              Array [],
              Array [],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": Object {
                  "movies": Array [
                    Object {
                      "backdrop_path": "/somethingelse.jpg",
                      "id": 9,
                      "overview": "This is a movie.",
                      "poster_path": "/something.jpg",
                      "release_date": "2018",
                      "title": "Venom",
                      "vote_average": 6.6,
                    },
                  ],
                },
              },
              Object {
                "isThrow": false,
                "value": Object {
                  "movies": Array [
                    Object {
                      "backdrop_path": "/somethingelse.jpg",
                      "id": 9,
                      "overview": "This is a movie.",
                      "poster_path": "/something.jpg",
                      "release_date": "2018",
                      "title": "Venom",
                      "vote_average": 6.6,
                    },
                  ],
                },
              },
            ],
          },
          "subscribe": [MockFunction] {
            "calls": Array [
              Array [
                [Function],
              ],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": undefined,
              },
            ],
          },
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "dispatch": [MockFunction],
            "getState": [MockFunction] {
              "calls": Array [
                Array [],
                Array [],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": Object {
                    "movies": Array [
                      Object {
                        "backdrop_path": "/somethingelse.jpg",
                        "id": 9,
                        "overview": "This is a movie.",
                        "poster_path": "/something.jpg",
                        "release_date": "2018",
                        "title": "Venom",
                        "vote_average": 6.6,
                      },
                    ],
                  },
                },
                Object {
                  "isThrow": false,
                  "value": Object {
                    "movies": Array [
                      Object {
                        "backdrop_path": "/somethingelse.jpg",
                        "id": 9,
                        "overview": "This is a movie.",
                        "poster_path": "/something.jpg",
                        "release_date": "2018",
                        "title": "Venom",
                        "vote_average": 6.6,
                      },
                    ],
                  },
                },
              ],
            },
            "subscribe": [MockFunction] {
              "calls": Array [
                Array [
                  [Function],
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            },
          },
          "unsubscribe": undefined,
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
