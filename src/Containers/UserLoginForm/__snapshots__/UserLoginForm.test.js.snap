// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserLoginForm should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserLoginForm
    user={
      Object {
        "email": "Louisa@turing.io",
        "id": 1806,
        "name": "Louisa",
        "password": "oooooooooooookay",
      }
    }
    userSignIn={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        className="user-login-form"
        onSubmit={[Function]}
      >
        <input
          className="form-input user-email-login"
          name="email"
          onChange={[Function]}
          placeholder="Enter Email Address"
          value=""
        />
        <input
          className="form-input user-password-login"
          name="password"
          onChange={[Function]}
          placeholder="Enter Password"
          type="password"
        />
        <button
          className="login-button"
        >
          Go To Movies!
        </button>
        <a
          className="user-signup-link"
          href="/newuser"
        >
          New User Sign Up
        </a>
      </form>,
      "className": "form-wrapper",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="form-input user-email-login"
            name="email"
            onChange={[Function]}
            placeholder="Enter Email Address"
            value=""
          />,
          <input
            className="form-input user-password-login"
            name="password"
            onChange={[Function]}
            placeholder="Enter Password"
            type="password"
          />,
          <button
            className="login-button"
          >
            Go To Movies!
          </button>,
          <a
            className="user-signup-link"
            href="/newuser"
          >
            New User Sign Up
          </a>,
        ],
        "className": "user-login-form",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "form-input user-email-login",
            "name": "email",
            "onChange": [Function],
            "placeholder": "Enter Email Address",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "form-input user-password-login",
            "name": "password",
            "onChange": [Function],
            "placeholder": "Enter Password",
            "type": "password",
            "value": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Go To Movies!",
            "className": "login-button",
          },
          "ref": null,
          "rendered": "Go To Movies!",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "New User Sign Up",
            "className": "user-signup-link",
            "href": "/newuser",
          },
          "ref": null,
          "rendered": "New User Sign Up",
          "type": "a",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          className="user-login-form"
          onSubmit={[Function]}
        >
          <input
            className="form-input user-email-login"
            name="email"
            onChange={[Function]}
            placeholder="Enter Email Address"
            value=""
          />
          <input
            className="form-input user-password-login"
            name="password"
            onChange={[Function]}
            placeholder="Enter Password"
            type="password"
          />
          <button
            className="login-button"
          >
            Go To Movies!
          </button>
          <a
            className="user-signup-link"
            href="/newuser"
          >
            New User Sign Up
          </a>
        </form>,
        "className": "form-wrapper",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              className="form-input user-email-login"
              name="email"
              onChange={[Function]}
              placeholder="Enter Email Address"
              value=""
            />,
            <input
              className="form-input user-password-login"
              name="password"
              onChange={[Function]}
              placeholder="Enter Password"
              type="password"
            />,
            <button
              className="login-button"
            >
              Go To Movies!
            </button>,
            <a
              className="user-signup-link"
              href="/newuser"
            >
              New User Sign Up
            </a>,
          ],
          "className": "user-login-form",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form-input user-email-login",
              "name": "email",
              "onChange": [Function],
              "placeholder": "Enter Email Address",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form-input user-password-login",
              "name": "password",
              "onChange": [Function],
              "placeholder": "Enter Password",
              "type": "password",
              "value": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Go To Movies!",
              "className": "login-button",
            },
            "ref": null,
            "rendered": "Go To Movies!",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "New User Sign Up",
              "className": "user-signup-link",
              "href": "/newuser",
            },
            "ref": null,
            "rendered": "New User Sign Up",
            "type": "a",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
